import requests
from bs4 import BeautifulSoup
import pandas as pd
import time
from urllib.parse import urlparse

def check_broken_links(start_url, max_pages=50):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–∞–π—Ç –Ω–∞ –±–∏—Ç—ã–µ —Å—Å—ã–ª–∫–∏."""
    domain = urlparse(start_url).netloc  # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
    visited = set()
    broken_links = []
    to_visit = {start_url}

    while to_visit and len(visited) < max_pages:
        url = to_visit.pop()
        if url in visited:
            continue

        try:
            response = requests.get(url, timeout=10)
            visited.add(url)
            print(f"–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ: {url} ({len(visited)}/{max_pages})")

            if response.status_code == 404:
                broken_links.append(url)
            else:
                soup = BeautifulSoup(response.text, 'html.parser')
                for link in soup.find_all('a', href=True):
                    href = link['href']
                    if href.startswith('http') and domain in href:
                        to_visit.add(href)
            
            time.sleep(0.5)  # –ó–∞—â–∏—Ç–∞ –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {url}: {str(e)}")
            broken_links.append(url)

    return broken_links

def main():
    print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∏—Ç—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ —Å–∞–π—Ç–µ ===")
    site_url = input("–í–≤–µ–¥–∏—Ç–µ URL —Å–∞–π—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, https://vitoslavica.ru): ").strip()
    
    if not site_url.startswith(('http://', 'https://')):
        site_url = 'https://' + site_url  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ö–µ–º—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    print(f"\nüîç –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É: {site_url}")
    broken_links = check_broken_links(site_url, max_pages=20)  # –£–º–µ–Ω—å—à–µ–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∞

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ–º–µ–Ω–∞
    domain = urlparse(site_url).netloc.replace('.', '_')
    report_filename = f"broken_links_{domain}.csv"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
    pd.DataFrame(broken_links, columns=["–ë–∏—Ç—ã–µ —Å—Å—ã–ª–∫–∏"]).to_csv(report_filename, index=False)
    print(f"\n‚úÖ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {report_filename}")
    print(f"–ù–∞–π–¥–µ–Ω–æ –±–∏—Ç—ã—Ö —Å—Å—ã–ª–æ–∫: {len(broken_links)}")

if __name__ == "__main__":
    main()
